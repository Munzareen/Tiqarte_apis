@model BusinesEntities.OrderDetail

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>OrderDetail</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
    
            <div class="form-group">
                @Html.LabelFor(model => model.ItemId, "ItemId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ItemId", String.Empty)
                    @Html.ValidationMessageFor(model => model.ItemId)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.DesignId, "DesignId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DesignId", String.Empty)
                    @Html.ValidationMessageFor(model => model.DesignId)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Weight)
                    @Html.ValidationMessageFor(model => model.Weight)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Points, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Points)
                    @Html.ValidationMessageFor(model => model.Points)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.PureWeight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PureWeight)
                    @Html.ValidationMessageFor(model => model.PureWeight)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Karat, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Karat)
                    @Html.ValidationMessageFor(model => model.Karat)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Qty)
                    @Html.ValidationMessageFor(model => model.Qty)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Size)
                    @Html.ValidationMessageFor(model => model.Size)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Ratti, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ratti)
                    @Html.ValidationMessageFor(model => model.Ratti)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.PromiseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PromiseDate)
                    @Html.ValidationMessageFor(model => model.PromiseDate)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.CreateddOn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreateddOn)
                    @Html.ValidationMessageFor(model => model.CreateddOn)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Decerption, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Decerption)
                    @Html.ValidationMessageFor(model => model.Decerption)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImagePath)
                    @Html.ValidationMessageFor(model => model.ImagePath)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.SizeWeight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SizeWeight)
                    @Html.ValidationMessageFor(model => model.SizeWeight)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.OrderId, "OrderId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("OrderId", String.Empty)
                    @Html.ValidationMessageFor(model => model.OrderId)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Completed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Completed)
                    @Html.ValidationMessageFor(model => model.Completed)
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.PendingQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PendingQuantity)
                    @Html.ValidationMessageFor(model => model.PendingQuantity)
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
